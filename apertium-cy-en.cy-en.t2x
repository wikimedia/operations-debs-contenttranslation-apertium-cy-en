<?xml version="1.0" encoding="UTF-8"?>
<!-- -*- nxml -*- -->
<interchunk>
  <section-def-cats>
    <def-cat n="SN">
      <cat-item tags="SN"/>
      <cat-item tags="SN.*"/>
    </def-cat>
    <def-cat n="SD">
      <cat-item tags="SD"/>
      <cat-item tags="SD.*"/>
    </def-cat>
    <def-cat n="SD_pos">
      <cat-item tags="SD.det.pos.*"/>
    </def-cat>

    <def-cat n="MON">
      <cat-item lemma="mon" tags="SN"/>
      <cat-item lemma="mon" tags="SN.*"/>
    </def-cat>
    <def-cat n="NUM">
      <cat-item lemma="num" tags="SN"/>
      <cat-item lemma="num" tags="SN.*"/>
    </def-cat>

    <def-cat n="DDIM">
      <cat-item lemma="ddim" tags="ADV"/>
    </def-cat>

    <def-cat n="CC">
      <cat-item tags="CC"/>
    </def-cat>
    <def-cat n="CS_VSO">
      <cat-item tags="CS.VSO"/>
    </def-cat>
    <def-cat n="CS_SVO">
      <cat-item tags="CS.SVO"/>
    </def-cat>

    <def-cat n="PRNSUBJ">
      <cat-item lemma="prnsubj" tags="SN.*"/>
    </def-cat>
    <def-cat n="Prn">
      <cat-item lemma="Prn" tags="SN.*"/>
    </def-cat>

    <def-cat n="SP">
      <cat-item tags="SP"/>
      <cat-item tags="SP.*"/>
    </def-cat>

    <def-cat n="Vpart">
      <cat-item tags="Vpart.*"/>
    </def-cat>

    <def-cat n="SV">
      <cat-item tags="SV"/>
      <cat-item lemma="verbcj" tags="SV.*"/>
      <cat-item lemma="verbimpers" tags="SV.*"/>
      <cat-item lemma="aux_verb" tags="SV.*"/>
      <cat-item lemma="verbaux" tags="SV.*"/>
      <cat-item lemma="verbcj_verbger" tags="SV.*"/>
    </def-cat>

    <def-cat n="SVpers">
      <cat-item tags="SV.vblex.*.p1.*"/>
      <cat-item tags="SV.vblex.*.p2.*"/>
      <cat-item tags="SV.vbser.*.p1.*"/>
      <cat-item tags="SV.vbser.*.p2.*"/>
    </def-cat>

    <def-cat n="REL">
      <cat-item tags="REL"/>
    </def-cat>

    <def-cat n="SV_ser">
      <!-- <cat-item tags="SV.vbser.*"/> -->
      <cat-item tags="SV.vbser.cni.*"/>
      <cat-item tags="SV.vbser.cns.*"/>
      <cat-item tags="SV.vbser.fut.*"/>
      <cat-item tags="SV.vbser.imp.*"/>
      <cat-item tags="SV.vbser.past.*"/>
      <cat-item tags="SV.vbser.pii.*"/>
      <cat-item tags="SV.vbser.plu.*"/>
      <cat-item tags="SV.vbser.pres.*"/>
      <cat-item tags="SV.vbser.prs.*"/>
    </def-cat>

    <def-cat n="SV_ser_inf">
      <cat-item tags="SV.vbser.inf"/>
    </def-cat>

    <def-cat n="SV_cael_inf">
      <cat-item lemma="verbcael" tags="SV.vblex.inf"/>
    </def-cat>

    <def-cat n="SV_inf">
      <cat-item tags="SV.vblex.inf"/>
    </def-cat>

    <def-cat n="SV_ger">
      <cat-item tags="SV.vblex.ger"/>
    </def-cat>

    <def-cat n="SP_wedi">
      <cat-item lemma="wedi" tags="SP"/>
    </def-cat>
    <def-cat n="SP_am">
      <cat-item lemma="am" tags="SP"/>
    </def-cat>
    <def-cat n="SP_ar">
      <cat-item lemma="ar" tags="SP"/>
    </def-cat>
    <def-cat n="SP_o">
      <cat-item lemma="o" tags="SP"/>
    </def-cat>
    <def-cat n="SP_i">
      <cat-item lemma="i" tags="SP"/>
    </def-cat>

    <def-cat n="SP_cyn">
      <cat-item lemma="cyn" tags="SP"/>
    </def-cat>
    <def-cat n="SP_ar_ôl">
      <cat-item lemma="ar ôl" tags="SP"/>
    </def-cat>
    <def-cat n="SP_nes">
      <cat-item lemma="nes" tags="SP"/>
    </def-cat>
    <def-cat n="SP_erbyn">
      <cat-item lemma="erbyn" tags="SP"/>
    </def-cat>
    <def-cat n="SP_wrth">
      <cat-item lemma="wrth" tags="SP"/>
    </def-cat>
    <def-cat n="SP_rhag_ofn">
      <cat-item lemma="rhag ofn" tags="SP"/>
    </def-cat>

  </section-def-cats>

  <section-def-attrs>
    <def-attr n="a_frase">
      <attr-item tags="SV"/>
      <attr-item tags="SN"/>
      <attr-item tags="SP"/>
    </def-attr>
    <def-attr n="a_verb">
      <attr-item tags="vblex"/>
      <attr-item tags="vbmod"/>
      <attr-item tags="vaux"/>
      <attr-item tags="vbser"/>
    </def-attr>
    <def-attr n="a_prn">
      <attr-item tags="prn.subj"/>
      <attr-item tags="prn.obj"/>
      <attr-item tags="prn.tn"/>
    </def-attr>

    <def-attr n="nbr">
      <attr-item tags="sp"/>
      <attr-item tags="sg"/>
      <attr-item tags="pl"/>
      <attr-item tags="ND"/>
    </def-attr>
    <def-attr n="gen">
      <attr-item tags="f"/>
      <attr-item tags="m"/>
      <attr-item tags="mf"/>
      <attr-item tags="GD"/>
    </def-attr>
    <def-attr n="pers">
      <attr-item tags="p1"/>
      <attr-item tags="p2"/>
      <attr-item tags="p3"/>
      <attr-item tags="PD"/>
    </def-attr>
    <def-attr n="temps">
      <attr-item tags="past"/>
      <attr-item tags="prs"/>
      <attr-item tags="cni"/>
      <attr-item tags="pii"/>
      <attr-item tags="fut"/>
      <attr-item tags="pres"/>
      <attr-item tags="imp"/>
      <attr-item tags="inf"/>
      <attr-item tags="plu"/>
      <attr-item tags="cns"/>
      <attr-item tags="cni"/>
    </def-attr>

  </section-def-attrs>

  <section-def-vars>
    <def-var n="posa_neg" v="0"/>
    <def-var n="nombre"/>
    <def-var n="genere"/>
    <def-var n="tense" v="&lt;pres&gt;"/>
    <def-var n="verbfinal"/>
  </section-def-vars>

  <section-def-macros>
    <def-macro n="when_are_we1" npar="1">
	<choose>
	  <when>
	    <test>
                <equal caseless="yes">
                  <clip pos="1" part="temps"/>
                  <lit-tag v="pii"/>
                </equal>
            </test>
	    <let>
	      <var n="tense"/>
              <lit-tag v="past"/>
	    </let>
	    <let>
              <clip pos="1" part="temps"/>
              <lit-tag v="past"/>
	    </let>
	  </when>
	  <when>
	    <test>
              <and>
                <equal caseless="yes">
                  <clip pos="1" part="lem"/>
                  <lit v="verbcj"/>
                </equal>
                <not>
                  <equal caseless="yes">
                    <clip pos="1" part="temps"/>
                    <lit-tag v="pii"/>
                  </equal>
                </not>
              </and>
            </test>
	    <let>
	      <var n="tense"/>
	      <clip pos="1" part="temps"/>
	    </let>
	  </when>
	  <otherwise>
            <let>
              <var n="tense"/>
	      <lit-tag v="pres"/>
	    </let>
	  </otherwise>
	</choose>
    </def-macro>

    <def-macro n="conj_verb_ser_pres1" npar="1">
      <choose>
        <when>
          <test>
  	  <and>
  	    <equal>
  	      <clip pos="1" part="nbr"/>
	      <lit-tag v="sg"/>
	    </equal>
	    <not>
	      <equal>
	        <clip pos="1" part="lem"/>
	        <lit v="prnsubj"/>
	      </equal>
	    </not>
	  </and>
	</test>
        <let>
          <var n="verbfinal"/>
              <lit-tag v="vbser.pres.p3.sg"/>
        </let>
      </when>	

        <when>
          <test>
  	  <and>
  	    <equal>
  	      <clip pos="1" part="nbr"/>
	      <lit-tag v="sg"/>
	    </equal>
	      <equal>
	        <clip pos="1" part="lem"/>
	        <lit v="prnsubj"/>
	      </equal>
	  </and>
	</test>
        <let>
          <var n="verbfinal"/>
              <lit-tag v="vbser.pres.p3.sg"/>
        </let>
      </when>	

      <otherwise>
        <let>
          <var n="verbfinal"/>
              <lit-tag v="vbser.pres"/>
        </let>
      </otherwise>
      </choose>
    </def-macro>


    <def-macro n="conj_verb_ser_past1" npar="1">
      <choose>
        <when>
          <test>
  	  <and>
  	    <equal>
  	      <clip pos="1" part="nbr"/>
	      <lit-tag v="sg"/>
	    </equal>
	    <not>
	      <equal>
	        <clip pos="1" part="lem"/>
	        <lit v="prnsubj"/>
	      </equal>
	    </not>
	  </and>
	</test>
        <let>
          <var n="verbfinal"/>
              <lit-tag v="vbser.past.p3.sg"/>
        </let>
      </when>	

        <when>
          <test>
  	  <and>
  	    <equal>
  	      <clip pos="1" part="nbr"/>
	      <lit-tag v="sg"/>
	    </equal>
	      <equal>
	        <clip pos="1" part="lem"/>
	        <lit v="prnsubj"/>
	      </equal>
	  </and>
	</test>
        <let>
          <var n="verbfinal"/>
              <lit-tag v="vbser.past.p3.sg"/>
        </let>
      </when>	

      <otherwise>
        <let>
          <var n="verbfinal"/>
              <lit-tag v="vbser.past"/>
        </let>
      </otherwise>
      </choose>
    </def-macro>

    <def-macro n="conj_verb_haver_past1" npar="1">
      <choose>
        <when>
          <test>
  	  <and>
  	    <equal>
  	      <clip pos="1" part="nbr"/>
	      <lit-tag v="sg"/>
	    </equal>
	    <not>
	      <equal>
	        <clip pos="1" part="lem"/>
	        <lit v="prnsubj"/>
	      </equal>
	    </not>
	  </and>
	</test>
        <let>
          <var n="verbfinal"/>
              <lit-tag v="vbhaver.past.p3.sg"/>
        </let>
      </when>	

        <when>
          <test>
  	  <and>
  	    <equal>
  	      <clip pos="1" part="nbr"/>
	      <lit-tag v="sg"/>
	    </equal>
	      <equal>
	        <clip pos="1" part="lem"/>
	        <lit v="prnsubj"/>
	      </equal>
	  </and>
	</test>
        <let>
          <var n="verbfinal"/>
              <lit-tag v="vbhaver.past.p3.sg"/>
        </let>
      </when>	

      <otherwise>
        <let>
          <var n="verbfinal"/>
              <lit-tag v="vbhaver.past"/>
        </let>
      </otherwise>
      </choose>
    </def-macro>


    <def-macro n="conj_verb_haver_pres1" npar="1">
      <choose>
        <when>
          <test>
  	  <and>
  	    <equal>
  	      <clip pos="1" part="nbr"/>
	      <lit-tag v="sg"/>
	    </equal>
	    <not>
	      <equal>
	        <clip pos="1" part="lem"/>
	        <lit v="prnsubj"/>
	      </equal>
	    </not>
	  </and>
	</test>
        <let>
          <var n="verbfinal"/>
              <lit-tag v="vbhaver.pres.p3.sg"/>
        </let>
      </when>	

        <when>
          <test>
  	  <and>
  	    <equal>
  	      <clip pos="1" part="nbr"/>
	      <lit-tag v="sg"/>
	    </equal>
	      <equal>
	        <clip pos="1" part="lem"/>
	        <lit v="prnsubj"/>
	      </equal>
	  </and>
	</test>
        <let>
          <var n="verbfinal"/>
              <lit-tag v="vbhaver.pres.p3.sg"/>
        </let>
      </when>	

      <otherwise>
        <let>
          <var n="verbfinal"/>
              <lit-tag v="vbhaver.pres"/>
        </let>
      </otherwise>
      </choose>
    </def-macro>
  </section-def-macros>

  <section-rules>

    <rule comment="REGLA: SN">
      <pattern>
        <pattern-item n="SN"/>
      </pattern>
      <action>
        <choose>
          <when>
            <test>
              <equal>
                <clip pos="1" part="nbr"/>
                <lit-tag v="sp"/>
              </equal>
            </test>
            <let>
              <clip pos="1" part="nbr"/>
              <lit-tag v="sg"/>
            </let>
          </when>
        </choose>
        <out>
          <chunk>
            <clip pos="1" part="lem"/>
            <clip pos="1" part="tags"/>
            <clip pos="1" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: SV">
      <pattern>
        <pattern-item n="SV"/>
      </pattern>
      <action>
        <out>
          <chunk>
            <clip pos="1" part="lem"/>
            <clip pos="1" part="tags"/>
            <clip pos="1" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: Vpart">
      <pattern>
        <pattern-item n="Vpart"/>
      </pattern>
      <action>
        <choose>
	  <when>
            <test>
	      <equal>
	        <clip pos="1" part="tags"/>
	        <lit-tag v="Vpart.neg"/>
	      </equal>
	    </test>
            <out>
              <chunk>
                <lit v="adv"/>
                <lit-tag v="Adv"/>
                <lit v="{^not"/>
                <lit-tag v="adv"/>
                <lit v="$}"/>
              </chunk>
            </out>
            <let>
              <var n="posa_neg"/>
              <lit v="1"/>
            </let>
	  </when>
          <otherwise>
	    <out>
              <b/>  
	    </out>
	  </otherwise>
	</choose>
      </action>
    </rule>


    <rule comment="REGLA: DDIM">
      <pattern>
        <pattern-item n="DDIM"/>
      </pattern>
      <action>
        <choose>
	  <when>
            <test>
	      <equal>
                <var n="posa_neg"/>
	        <lit v="0"/>
	      </equal>
	    </test>
            <out>
              <chunk>
                <lit v="adv"/>
                <lit-tag v="Adv"/>
                <lit v="{^not"/>
                <lit-tag v="adv"/>
                <lit v="$}"/>
              </chunk>
            </out>
            <let>
              <var n="posa_neg"/>
              <lit v="1"/>
            </let>
	  </when>
 <!--
          <otherwise>
	     <out>
              <b/>   
	    </out> 
	  </otherwise> -->
	</choose>
      </action>
    </rule>


    <rule comment="REGLA: Vpart SVpers">
      <pattern>
        <pattern-item n="Vpart"/>
        <pattern-item n="SVpers"/>
      </pattern>
      <action>
        <choose>
	  <when>
            <test>
	      <equal>
	        <clip pos="1" part="tags"/>
	        <lit-tag v="Vpart.neg"/>
	      </equal>
	    </test>
            <out>
              <chunk>
                <lit v="prpers"/>
                <lit-tag v="SN"/>
                <lit v="{^prpers"/>
                <lit-tag v="prn"/>
                <lit-tag v="subj"/>
		<clip pos="2" part="pers"/>
                <lit-tag v="mf"/>
		<clip pos="2" part="nbr"/>
                <lit v="$}"/>
              </chunk>
              <b pos="1"/>
              <chunk>
                <clip pos="2" part="lem"/>
                <clip pos="2" part="tags"/>
                <clip pos="2" part="chcontent"/>
              </chunk>
              <b/>
              <chunk>
                <lit v="adv"/>
                <lit-tag v="Adv"/>
                <lit v="{^not"/>
                <lit-tag v="adv"/>
                <lit v="$}"/>
              </chunk>
            </out>
            <let>
              <var n="posa_neg"/>
              <lit v="1"/>
            </let>
	  </when>
          <otherwise>
	    <out>
              <chunk>
                <lit v="prpers"/>
                <lit-tag v="SN"/>
                <lit v="{^prpers"/>
                <lit-tag v="prn"/>
                <lit-tag v="subj"/>
		<clip pos="2" part="pers"/>
                <lit-tag v="mf"/>
		<clip pos="2" part="nbr"/>
                <lit v="$}"/>
              </chunk>
              <b pos="1"/>  
              <chunk>
                <clip pos="2" part="lem"/>
                <clip pos="2" part="tags"/>
                <clip pos="2" part="chcontent"/>
              </chunk>
	    </out>
	  </otherwise>
	</choose>
      </action>
    </rule>


    <rule comment="REGLA: Vpart SV">
      <pattern>
        <pattern-item n="Vpart"/>
        <pattern-item n="SV"/>
      </pattern>
      <action>
        <choose>
	  <when>
            <test>
	      <equal>
	        <clip pos="1" part="tags"/>
	        <lit-tag v="Vpart.neg"/>
	      </equal>
	    </test>
            <out>
              <chunk>
                <clip pos="2" part="lem"/>
                <clip pos="2" part="tags"/>
                <clip pos="2" part="chcontent"/>
              </chunk>
              <b/>
              <chunk>
                <lit v="adv"/>
                <lit-tag v="Adv"/>
                <lit v="{^not"/>
                <lit-tag v="adv"/>
                <lit v="$}"/>
              </chunk>
            </out>
            <let>
              <var n="posa_neg"/>
              <lit v="1"/>
            </let>
	  </when>
          <otherwise>
	    <out>
              <chunk>
                <clip pos="2" part="lem"/>
                <clip pos="2" part="tags"/>
                <clip pos="2" part="chcontent"/>
              </chunk>
	    </out>
	  </otherwise>
	</choose>
      </action>
    </rule>


    <rule comment="REGLA: Vpart SV SN">
      <pattern>
        <pattern-item n="Vpart"/>
        <pattern-item n="SV"/>
        <pattern-item n="SN"/>
      </pattern>
      <action>
        <choose>
	  <when>
            <test>
	      <equal>
	        <clip pos="1" part="tags"/>
	        <lit-tag v="Vpart.neg"/>
	      </equal>
	    </test>
            <out>
              <chunk>
                <clip pos="3" part="lem"/>
                <clip pos="3" part="tags"/>
                <clip pos="3" part="chcontent"/>
              </chunk>
              <b/>
              <chunk>
                <clip pos="2" part="lem"/>
                <clip pos="2" part="tags"/>
                <clip pos="2" part="chcontent"/>
              </chunk>
              <b/>
              <chunk>
                <lit v="adv"/>
                <lit-tag v="Adv"/>
                <lit v="{^not"/>
                <lit-tag v="adv"/>
                <lit v="$}"/>
              </chunk>
            </out>
            <let>
              <var n="posa_neg"/>
              <lit v="1"/>
            </let>
	  </when>
	  <when>
            <test>
	      <and>
	        <equal>
	          <clip pos="1" part="tags"/>
	          <lit-tag v="Vpart.itg"/>
	        </equal>
	        <equal caseless="yes">
	          <clip pos="1" part="lem"/>
	          <lit v="a"/>
	        </equal>
              </and>
	    </test>
            <out>
              <chunk>
                <lit v="do"/>
                <lit-tag v="SV.vbdo"/>
                <lit v="{^do"/>
                <lit-tag v="vbdo.past"/>
                <lit v="$}"/>
              </chunk>
              <b/>
              <chunk>
                <clip pos="3" part="lem"/>
                <clip pos="3" part="tags"/>
                <clip pos="3" part="chcontent"/>
              </chunk>
              <b/>
              <chunk>
                <clip pos="2" part="lem"/>
		<clip pos="2" part="a_frase"/>
		<clip pos="2" part="a_verb"/>
		<lit-tag v="inf"/>
                <clip pos="2" part="chcontent"/>
              </chunk>
            </out>
	  </when>

	  <when>
            <test>
	      <and>
	        <equal>
	          <clip pos="1" part="tags"/>
	          <lit-tag v="Vpart.itg"/>
	        </equal>
	        <equal caseless="yes">
	          <clip pos="1" part="lem"/>
	          <lit v="oni"/>
	        </equal>
              </and>
	    </test>
            <out>
              <chunk>
                <lit v="do"/>
                <lit-tag v="SV.vbdo"/>
                <lit v="{^do"/>
                <lit-tag v="vbdo.past"/>
                <lit v="$}"/>
              </chunk>
	      <b/>
              <chunk>
                <lit v="adv"/>
                <lit-tag v="Adv"/>
                <lit v="{^not"/>
                <lit-tag v="adv"/>
                <lit v="$}"/>
              </chunk>
              <b/>
              <chunk>
                <clip pos="3" part="lem"/>
                <clip pos="3" part="tags"/>
                <clip pos="3" part="chcontent"/>
              </chunk>
              <b/>
              <chunk>
                <clip pos="2" part="lem"/>
		<clip pos="2" part="a_frase"/>
		<clip pos="2" part="a_verb"/>
		<lit-tag v="inf"/>
                <clip pos="2" part="chcontent"/>
              </chunk>
            </out>
	  </when>


          <otherwise>
	    <out>
              <chunk>
                <clip pos="3" part="lem"/>
                <clip pos="3" part="tags"/>
                <clip pos="3" part="chcontent"/>
              </chunk>
              <b/>
              <chunk>
                <clip pos="2" part="lem"/>
                <clip pos="2" part="tags"/>
                <clip pos="2" part="chcontent"/>
              </chunk>
            </out>
	  </otherwise>
	</choose>
      </action>
    </rule>


    <rule comment="REGLA: Vpart SV SN CC SN">
      <pattern>
        <pattern-item n="Vpart"/>
        <pattern-item n="SV"/>
        <pattern-item n="SN"/>
        <pattern-item n="CC"/>
        <pattern-item n="SN"/>
      </pattern>
      <action>
        <choose>
	  <when>
            <test>
	      <equal>
	        <clip pos="1" part="tags"/>
	        <lit-tag v="Vpart.neg"/>
	      </equal>
	    </test>
            <out>
              <chunk>
                <clip pos="3" part="lem"/>
                <clip pos="3" part="tags"/>
                <clip pos="3" part="chcontent"/>
              </chunk>
              <b pos="3"/>
              <chunk>
                <clip pos="4" part="lem"/>
                <clip pos="4" part="tags"/>
                <clip pos="4" part="chcontent"/>
              </chunk>
              <b pos="4"/>
              <chunk>
                <clip pos="5" part="lem"/>
                <clip pos="5" part="tags"/>
                <clip pos="5" part="chcontent"/>
              </chunk>
              <b/>
              <chunk>
                <clip pos="2" part="lem"/>
                <clip pos="2" part="tags"/>
                <clip pos="2" part="chcontent"/>
              </chunk>
              <b/>
              <chunk>
                <lit v="adv"/>
                <lit-tag v="Adv"/>
                <lit v="{^not"/>
                <lit-tag v="adv"/>
                <lit v="$}"/>
              </chunk>
            </out>
            <let>
              <var n="posa_neg"/>
              <lit v="1"/>
            </let>
	  </when>
	  <when>
            <test>
	      <and>
	        <equal>
	          <clip pos="1" part="tags"/>
	          <lit-tag v="Vpart.itg"/>
	        </equal>
	        <equal caseless="yes">
	          <clip pos="1" part="lem"/>
	          <lit v="a"/>
	        </equal>
              </and>
	    </test>
            <out>
              <chunk>
                <lit v="do"/>
                <lit-tag v="SV.vbdo"/>
                <lit v="{^do"/>
                <lit-tag v="vbdo.past"/>
                <lit v="$}"/>
              </chunk>
              <b/>
              <chunk>
                <clip pos="3" part="lem"/>
                <clip pos="3" part="tags"/>
                <clip pos="3" part="chcontent"/>
              </chunk>
              <b pos="3"/>
              <chunk>
                <clip pos="4" part="lem"/>
                <clip pos="4" part="tags"/>
                <clip pos="4" part="chcontent"/>
              </chunk>
              <b pos="4"/>
              <chunk>
                <clip pos="5" part="lem"/>
                <clip pos="5" part="tags"/>
                <clip pos="5" part="chcontent"/>
              </chunk>

              <b/>
              <chunk>
                <clip pos="2" part="lem"/>
		<clip pos="2" part="a_frase"/>
		<clip pos="2" part="a_verb"/>
		<lit-tag v="inf"/>
                <clip pos="2" part="chcontent"/>
              </chunk>
            </out>
	  </when>

	  <when>
            <test>
	      <and>
	        <equal>
	          <clip pos="1" part="tags"/>
	          <lit-tag v="Vpart.itg"/>
	        </equal>
	        <equal caseless="yes">
	          <clip pos="1" part="lem"/>
	          <lit v="oni"/>
	        </equal>
              </and>
	    </test>
            <out>
              <chunk>
                <lit v="do"/>
                <lit-tag v="SV.vbdo"/>
                <lit v="{^do"/>
                <lit-tag v="vbdo.past"/>
                <lit v="$}"/>
              </chunk>
	      <b/>
              <chunk>
                <lit v="adv"/>
                <lit-tag v="Adv"/>
                <lit v="{^not"/>
                <lit-tag v="adv"/>
                <lit v="$}"/>
              </chunk>
              <b/>
              <chunk>
                <clip pos="3" part="lem"/>
                <clip pos="3" part="tags"/>
                <clip pos="3" part="chcontent"/>
              </chunk>
              <b pos="3"/>
              <chunk>
                <clip pos="4" part="lem"/>
                <clip pos="4" part="tags"/>
                <clip pos="4" part="chcontent"/>
              </chunk>
              <b pos="4"/>
              <chunk>
                <clip pos="5" part="lem"/>
                <clip pos="5" part="tags"/>
                <clip pos="5" part="chcontent"/>
              </chunk>

              <b/>
              <chunk>
                <clip pos="2" part="lem"/>
		<clip pos="2" part="a_frase"/>
		<clip pos="2" part="a_verb"/>
		<lit-tag v="inf"/>
                <clip pos="2" part="chcontent"/>
              </chunk>
            </out>
	  </when>


          <otherwise>
	    <out>
              <chunk>
                <clip pos="3" part="lem"/>
                <clip pos="3" part="tags"/>
                <clip pos="3" part="chcontent"/>
              </chunk>
              <b pos="3"/>
              <chunk>
                <clip pos="4" part="lem"/>
                <clip pos="4" part="tags"/>
                <clip pos="4" part="chcontent"/>
              </chunk>
              <b pos="4"/>
              <chunk>
                <clip pos="5" part="lem"/>
                <clip pos="5" part="tags"/>
                <clip pos="5" part="chcontent"/>
              </chunk>
              <b/>
              <chunk>
                <clip pos="2" part="lem"/>
                <clip pos="2" part="tags"/>
                <clip pos="2" part="chcontent"/>
              </chunk>
            </out>
	  </otherwise>
	</choose>
      </action>
    </rule>



    <rule comment="REGLA: Prn SV">
      <pattern>
        <pattern-item n="Prn"/>
        <pattern-item n="SV"/>
      </pattern>
      <action>
      <call-macro n="when_are_we1">
        <with-param pos="1"/>
      </call-macro>
          <out>
            <chunk>
              <get-case-from pos="1">
                <clip pos="1" part="lem"/>
              </get-case-from>
              <clip pos="1" part="tags"/>
              <clip pos="1" part="chcontent"/>
            </chunk>
            <b/>
            <chunk>
              <get-case-from pos="2">
                <clip pos="2" part="lem"/>
              </get-case-from>
              <clip pos="2" part="a_frase"/>
              <clip pos="2" part="a_verb"/>
              <clip pos="2" part="temps"/>
              <clip pos="2" part="pers"/>
              <clip pos="1" part="nbr"/>
              <clip pos="2" part="chcontent"/>
            </chunk>
          </out>
      </action>
    </rule>


    <rule comment="REGLA: SV SN">
      <pattern>
        <pattern-item n="SV"/>
        <pattern-item n="SN"/>
      </pattern>
      <action>
      <call-macro n="when_are_we1">
        <with-param pos="1"/>
      </call-macro>
      <choose>
        <when>
          <test>
              <or>
                <equal>
                  <clip pos="1" part="temps"/>
                  <lit-tag v="inf"/>
                </equal>
                <equal>
                  <clip pos="1" part="temps"/>
                  <lit-tag v="imp"/>
                </equal> 
              </or>
          </test>
          <out>
            <chunk>
              <clip pos="1" part="lem"/>
              <clip pos="1" part="a_frase"/>
              <clip pos="1" part="a_verb"/>
              <clip pos="1" part="temps"/>
              <clip pos="1" part="pers"/>
              <clip pos="2" part="nbr"/>
              <clip pos="1" part="chcontent"/>
            </chunk>
            <b/>
            <chunk>
              <clip pos="2" part="lem"/>
              <clip pos="2" part="tags"/>
              <clip pos="2" part="chcontent"/>
            </chunk>
          </out>
        </when>
        <otherwise>
          <out>
            <chunk>
              <get-case-from pos="1">
                <clip pos="2" part="lem"/>
              </get-case-from>
              <clip pos="2" part="tags"/>
              <clip pos="2" part="chcontent"/>
            </chunk>
            <b/>
            <chunk>
              <get-case-from pos="2">
                <clip pos="1" part="lem"/>
              </get-case-from>
              <clip pos="1" part="a_frase"/>
              <clip pos="1" part="a_verb"/>
              <clip pos="1" part="temps"/>
              <clip pos="1" part="pers"/>
<!--              <clip pos="2" part="nbr"/> -->
              <clip pos="2" part="nbr"/> 
              <clip pos="1" part="chcontent"/>
            </chunk>
          </out>
        </otherwise>
	</choose>
      </action>
    </rule>


    <rule comment="REGLA: SV SN CC SN">
      <pattern>
        <pattern-item n="SV"/>
        <pattern-item n="SN"/>
        <pattern-item n="CC"/>
        <pattern-item n="SN"/>
      </pattern>
      <action>
      <call-macro n="when_are_we1">
        <with-param pos="1"/>
      </call-macro>
      <choose>
        <when>
          <test>
              <or>
                <equal>
                  <clip pos="1" part="temps"/>
                  <lit-tag v="inf"/>
                </equal>
                <equal>
                  <clip pos="1" part="temps"/>
                  <lit-tag v="imp"/>
                </equal> 
              </or>
          </test>
          <out>
            <chunk>
              <clip pos="1" part="lem"/>
              <clip pos="1" part="a_frase"/>
              <clip pos="1" part="a_verb"/>
              <clip pos="1" part="temps"/>
              <clip pos="1" part="pers"/>
              <clip pos="2" part="nbr"/>
              <clip pos="1" part="chcontent"/>
            </chunk>
            <b pos="1"/>
            <chunk>
              <clip pos="2" part="lem"/>
              <clip pos="2" part="tags"/>
              <clip pos="2" part="chcontent"/>
            </chunk>
            <b pos="2"/>
            <chunk>
              <clip pos="3" part="lem"/>
              <clip pos="3" part="tags"/>
              <clip pos="3" part="chcontent"/>
            </chunk>
            <b pos="3"/>
            <chunk>
              <clip pos="4" part="lem"/>
              <clip pos="4" part="tags"/>
              <clip pos="4" part="chcontent"/>
            </chunk>
          </out>
        </when>
        <otherwise>
          <out>
            <chunk>
              <get-case-from pos="1">
                <clip pos="2" part="lem"/>
              </get-case-from>
              <clip pos="2" part="tags"/>
              <clip pos="2" part="chcontent"/>
            </chunk>
            <b pos="1"/>
            <chunk>
              <clip pos="3" part="lem"/>
              <clip pos="3" part="tags"/>
              <clip pos="3" part="chcontent"/>
            </chunk>
            <b pos="2"/>
            <chunk>
              <clip pos="4" part="lem"/>
              <clip pos="4" part="tags"/>
              <clip pos="4" part="chcontent"/>
            </chunk>
            <b pos="3"/>
            <chunk>
              <get-case-from pos="2">
                <clip pos="1" part="lem"/>
              </get-case-from>
              <clip pos="1" part="a_frase"/>
              <clip pos="1" part="a_verb"/>
              <clip pos="1" part="temps"/>
              <clip pos="1" part="pers"/>
<!--              <clip pos="2" part="nbr"/> -->
              <clip pos="2" part="nbr"/> 
              <clip pos="1" part="chcontent"/>
            </chunk>
          </out>
        </otherwise>
	</choose>
      </action>
    </rule>

    <rule comment="REGLA: SV SD SN">
      <pattern>
        <pattern-item n="SV"/>
        <pattern-item n="SD"/>
        <pattern-item n="SN"/>
      </pattern>
      <action>
      <call-macro n="when_are_we1">
        <with-param pos="1"/>
      </call-macro>
      <choose>
        <when>
          <test>
              <or>
                <equal>
                  <clip pos="1" part="temps"/>
                  <lit-tag v="inf"/>
                </equal>
                <equal>
                  <clip pos="1" part="temps"/>
                  <lit-tag v="imp"/>
                </equal> 
              </or>
          </test>
          <out>
            <chunk>
              <clip pos="1" part="lem"/>
              <clip pos="1" part="a_frase"/>
              <clip pos="1" part="a_verb"/>
              <clip pos="1" part="temps"/>
              <clip pos="1" part="pers"/>
              <clip pos="2" part="nbr"/>
              <clip pos="1" part="chcontent"/>
            </chunk>
            <b/>
            <chunk>
              <clip pos="2" part="lem"/>
              <clip pos="2" part="tags"/>
              <clip pos="2" part="chcontent"/>
            </chunk>
	    <b/>
            <chunk>
              <clip pos="3" part="whole"/>
	    </chunk>
          </out>
        </when>
        <otherwise>
          <out>
            <chunk>
              <get-case-from pos="1">
                <clip pos="2" part="lem"/>
              </get-case-from>
              <clip pos="2" part="tags"/>
              <clip pos="2" part="chcontent"/>
            </chunk>
	    <b/>
            <chunk>
              <clip pos="3" part="whole"/>
	    </chunk>
            <b/>
            <chunk>
              <get-case-from pos="2">
                <clip pos="1" part="lem"/>
              </get-case-from>
              <clip pos="1" part="a_frase"/>
              <clip pos="1" part="a_verb"/>
              <clip pos="1" part="temps"/>
              <clip pos="1" part="pers"/>
              <clip pos="2" part="nbr"/>
              <clip pos="1" part="chcontent"/>
            </chunk>
          </out>
        </otherwise>
	</choose>
      </action>
    </rule>

    <rule comment="REGLA: SV SD_pos SN PRNSUBJ">
      <pattern>
        <pattern-item n="SV"/>
        <pattern-item n="SD_pos"/>
        <pattern-item n="SN"/>
        <pattern-item n="PRNSUBJ"/>
      </pattern>
      <action>
      <call-macro n="when_are_we1">
        <with-param pos="1"/>
      </call-macro>
      <choose>
        <when>
          <test>
              <or>
                <equal>
                  <clip pos="1" part="temps"/>
                  <lit-tag v="inf"/>
                </equal>
                <equal>
                  <clip pos="1" part="temps"/>
                  <lit-tag v="imp"/>
                </equal> 
              </or>
          </test>
          <out>
            <chunk>
              <clip pos="1" part="lem"/>
              <clip pos="1" part="a_frase"/>
              <clip pos="1" part="a_verb"/>
              <clip pos="1" part="temps"/>
              <clip pos="1" part="pers"/>
              <clip pos="2" part="nbr"/>
              <clip pos="1" part="chcontent"/>
            </chunk>
            <b/>
            <chunk>
              <clip pos="2" part="lem"/>
              <clip pos="2" part="tags"/>
              <clip pos="2" part="chcontent"/>
            </chunk>
	    <b/>
            <chunk>
              <clip pos="3" part="whole"/>
	    </chunk>
          </out>
        </when>
        <otherwise>
          <out>
            <chunk>
              <get-case-from pos="1">
                <clip pos="2" part="lem"/>
              </get-case-from>
              <clip pos="2" part="tags"/>
              <clip pos="2" part="chcontent"/>
            </chunk>
	    <b/>
            <chunk>
              <clip pos="3" part="whole"/>
	    </chunk>
            <b/>
            <chunk>
              <get-case-from pos="2">
                <clip pos="1" part="lem"/>
              </get-case-from>
              <clip pos="1" part="a_frase"/>
              <clip pos="1" part="a_verb"/>
              <clip pos="1" part="temps"/>
              <clip pos="1" part="pers"/>
              <clip pos="2" part="nbr"/>
              <clip pos="1" part="chcontent"/>
            </chunk>
          </out>
        </otherwise>
	</choose>
      </action>
    </rule>


    <rule comment="REGLA: SD_pos SN PRNSUBJ">
      <pattern>
        <pattern-item n="SD_pos"/>
        <pattern-item n="SN"/>
        <pattern-item n="PRNSUBJ"/>
      </pattern>
      <action>
          <out>
            <chunk>
              <clip pos="1" part="whole"/>
	    </chunk>
	    <b/>
	    <chunk>
              <clip pos="2" part="whole"/>
            </chunk>
          </out>
      </action>
    </rule>


    <rule comment="REGLA: SV SN CC SN">
      <pattern>
        <pattern-item n="SV"/>
        <pattern-item n="SN"/>
        <pattern-item n="CC"/>
        <pattern-item n="SN"/>
      </pattern>
      <action>
      <call-macro n="when_are_we1">
        <with-param pos="1"/>
      </call-macro>
      <choose>
        <when>
          <test>
              <or>
                <equal>
                  <clip pos="1" part="temps"/>
                  <lit-tag v="inf"/>
                </equal>
                <equal>
                  <clip pos="1" part="temps"/>
                  <lit-tag v="imp"/>
                </equal> 
              </or>
          </test>
          <out>
            <chunk>
              <clip pos="1" part="lem"/>
              <clip pos="1" part="a_frase"/>
              <clip pos="1" part="a_verb"/>
              <clip pos="1" part="temps"/>
              <clip pos="1" part="pers"/>
              <clip pos="2" part="nbr"/>
              <clip pos="1" part="chcontent"/>
            </chunk>
            <b/>
            <chunk>
              <clip pos="2" part="lem"/>
              <clip pos="2" part="tags"/>
              <clip pos="2" part="chcontent"/>
            </chunk>
            <b/>
            <chunk>
              <clip pos="3" part="lem"/>
              <clip pos="3" part="tags"/>
              <clip pos="3" part="chcontent"/>
            </chunk>
            <b/>
            <chunk>
              <clip pos="4" part="lem"/>
              <clip pos="4" part="tags"/>
              <clip pos="4" part="chcontent"/>
            </chunk>
          </out>
        </when>
        <otherwise>
          <out>
            <chunk>
              <get-case-from pos="1">
                <clip pos="2" part="lem"/>
              </get-case-from>
              <clip pos="2" part="tags"/>
              <clip pos="2" part="chcontent"/>
            </chunk>
            <b/>
            <chunk>
              <clip pos="3" part="lem"/>
              <clip pos="3" part="tags"/>
              <clip pos="3" part="chcontent"/>
            </chunk>
            <b/>
            <chunk>
              <clip pos="4" part="lem"/>
              <clip pos="4" part="tags"/>
              <clip pos="4" part="chcontent"/>
            </chunk>
            <b/>
            <chunk>
              <get-case-from pos="2">
                <clip pos="1" part="lem"/>
              </get-case-from>
              <clip pos="1" part="a_frase"/>
              <clip pos="1" part="a_verb"/>
              <clip pos="1" part="temps"/>
              <clip pos="1" part="pers"/>
              <clip pos="2" part="nbr"/>
              <clip pos="1" part="chcontent"/>
            </chunk>
          </out>
        </otherwise>
	</choose>
      </action>
    </rule>


    <!--
         Welsh: SV SN1 SN2 (Verb Subj Obj) 
	 output English SN1 SV SN2 (Subject Verb Obj) 
    -->

    <rule comment="REGLA: SV SN SN">
      <pattern>
        <pattern-item n="SV"/>
        <pattern-item n="SN"/>
        <pattern-item n="SN"/>
      </pattern>
      <action>
      <call-macro n="when_are_we1">
        <with-param pos="1"/>
      </call-macro>
        <out>
          <chunk>
            <get-case-from pos="1">
              <clip pos="2" part="lem"/>
            </get-case-from>
            <clip pos="2" part="tags"/>
            <clip pos="2" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
            <get-case-from pos="2">
              <clip pos="1" part="lem"/>
            </get-case-from>
            <clip pos="1" part="a_frase"/>
	    <clip pos="1" part="a_verb"/>
	    <clip pos="1" part="temps"/>
	    <clip pos="1" part="pers"/>
	    <clip pos="2" part="nbr"/>
            <clip pos="1" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="3" part="lem"/>
            <clip pos="3" part="tags"/>
            <clip pos="3" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>


    <!--
         Welsh: CS_SVO SN1 SV SN2 (Subj Verb Obj) 
	 output English CS SN1 SV SN2 (Subject Verb Obj) 
    -->
    <rule comment="REGLA: CS_SVO SN SV SN">
      <pattern>
        <pattern-item n="CS_SVO"/>
        <pattern-item n="SN"/>
        <pattern-item n="SV"/>
        <pattern-item n="SN"/>
      </pattern>
      <action>
      <call-macro n="when_are_we1">
        <with-param pos="1"/>
      </call-macro>
        <out>
          <chunk>
            <clip pos="1" part="lem"/>
            <clip pos="1" part="tags"/>
            <clip pos="1" part="chcontent"/>
          </chunk>
          <b pos="1"/>
          <chunk>
            <clip pos="2" part="lem"/>
            <clip pos="2" part="tags"/>
            <clip pos="2" part="chcontent"/>
          </chunk>
          <b pos="2"/>
          <chunk>
            <clip pos="3" part="lem"/>
            <clip pos="3" part="a_frase"/>
	    <clip pos="3" part="a_verb"/>
	    <clip pos="3" part="temps"/>
	    <clip pos="3" part="pers"/>
	    <clip pos="2" part="nbr"/>
            <clip pos="3" part="chcontent"/>
          </chunk>
          <b pos="3"/>
          <chunk>
            <clip pos="4" part="lem"/>
            <clip pos="4" part="tags"/>
            <clip pos="4" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: mon SP_o SN">
      <pattern>
        <pattern-item n="MON"/>
        <pattern-item n="SP_o"/>
        <pattern-item n="SN"/>
      </pattern>
      <action>
        <out>
          <chunk>
            <get-case-from pos="1">
              <clip pos="1" part="lem"/>
            </get-case-from>
            <clip pos="1" part="tags"/>
            <clip pos="1" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="2" part="lem"/>
            <clip pos="2" part="tags"/>
            <clip pos="2" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="3" part="lem"/>
            <clip pos="3" part="tags"/>
            <clip pos="3" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>

	<!-- handled in CG
    <rule comment="REGLA: NUM SP_o SN">
      <pattern>
        <pattern-item n="NUM"/>
        <pattern-item n="SP_o"/>
        <pattern-item n="SN"/>
      </pattern>
      <action>
        <out>
          <chunk>
            <get-case-from pos="1">
              <clip pos="1" part="lem"/>
            </get-case-from>
            <clip pos="1" part="tags"/>
            <clip pos="1" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="3" part="lem"/>
            <clip pos="3" part="tags"/>
            <clip pos="3" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>
	-->

    <rule comment="REGLA: SN REL SV SN">
      <pattern>
        <pattern-item n="SN"/>
        <pattern-item n="REL"/>
        <pattern-item n="SV"/>
        <pattern-item n="SN"/>
      </pattern>
      <action>
        <out>
          <chunk>
            <get-case-from pos="1">
              <clip pos="1" part="lem"/>
            </get-case-from>
            <clip pos="1" part="tags"/>
            <clip pos="1" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="2" part="lem"/>
            <clip pos="2" part="tags"/>
            <clip pos="2" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
            <get-case-from pos="2">
              <clip pos="3" part="lem"/>
            </get-case-from>
            <clip pos="3" part="a_frase"/>
	    <clip pos="3" part="a_verb"/>
	    <clip pos="3" part="temps"/>
	    <clip pos="3" part="pers"/>
	    <clip pos="1" part="nbr"/>
            <clip pos="3" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="4" part="lem"/>
            <clip pos="4" part="tags"/>
            <clip pos="4" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: SV SN SV_inf SN">
      <pattern>
        <pattern-item n="SV"/>
        <pattern-item n="SN"/>
        <pattern-item n="SV_inf"/>
        <pattern-item n="SN"/>
      </pattern>
      <action>
      <call-macro n="when_are_we1">
        <with-param pos="1"/>
      </call-macro>
        <out>
          <chunk>
            <get-case-from pos="1">
              <clip pos="2" part="lem"/>
            </get-case-from>
            <clip pos="2" part="tags"/>
            <clip pos="2" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
            <get-case-from pos="2">
              <clip pos="1" part="lem"/>
            </get-case-from>
            <clip pos="1" part="a_frase"/>
	    <clip pos="1" part="a_verb"/>
	    <clip pos="1" part="temps"/>
	    <clip pos="1" part="pers"/>
	    <clip pos="2" part="nbr"/>
            <clip pos="1" part="chcontent"/>
          </chunk>
<!--          <b/>
	  <chunk>
            <lit v="to"/>
	    <lit-tag v="SP"/>
	    <lit v="{^to"/>
	    <lit-tag v="pr"/>
	    <lit v="$}"/>
	  </chunk> -->
	  <b/>
          <chunk>
            <clip pos="3" part="lem"/>
            <clip pos="3" part="tags"/>
            <clip pos="3" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="4" part="lem"/>
            <clip pos="4" part="tags"/>
            <clip pos="4" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>

    <!-- 
        For Welsh pattern "bod + wedi + verb_inf"
        output English "has/have + verb_past_participle"
    -->
    <rule comment="REGLA: SV_ser SP_wedi SV_inf">
      <pattern>
        <pattern-item n="SV_ser"/>
        <pattern-item n="SP_wedi"/>
        <pattern-item n="SV_inf"/>
      </pattern>
      <action>
	<choose> 
	  <when>
	    <test>
	      <or>
	        <equal>
                  <clip pos="1" part="temps"/>
                  <lit-tag v="past"/>
                </equal>
	        <equal>
                  <clip pos="1" part="temps"/>
                  <lit-tag v="pii"/>
                </equal>
	      </or>
            </test>
            <call-macro n="conj_verb_haver_past1">
               <with-param pos="1"/> 
            </call-macro> 
          </when>
          <otherwise>
            <call-macro n="conj_verb_haver_pres1">
               <with-param pos="1"/> 
            </call-macro> 
          </otherwise>
        </choose>
        <out>
          <chunk>
            <lit v="vbhaver"/>
            <lit-tag v="SV.vbhaver"/>
            <lit v="{^have"/>
              <var n="verbfinal"/>
	    <lit v="$}"/>
	  </chunk>
	  <b/>
	  <chunk>
	    <clip pos="3" part="lem"/>
	    <lit-tag v="SV.vblex.pp"/>
            <clip pos="3" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>


    <!-- 
        For Welsh pattern "bod + noun phrase + wedi + verb_inf"
        output English "noun phrase + has/have + verb_past_participle"
    -->
    <rule comment="REGLA: SV_ser SN SP_wedi SV_inf">
      <pattern>
        <pattern-item n="SV_ser"/>
        <pattern-item n="SN"/>
        <pattern-item n="SP_wedi"/>
        <pattern-item n="SV_inf"/>
      </pattern>
      <action>
	<choose> 
	  <when>
	    <test>
	      <or>
	        <equal>
                  <clip pos="1" part="temps"/>
                  <lit-tag v="past"/>
                </equal>
	        <equal>
                  <clip pos="1" part="temps"/>
                  <lit-tag v="pii"/>
                </equal>
	      </or>
            </test>
            <call-macro n="conj_verb_haver_past1">
               <with-param pos="2"/> 
            </call-macro> 
          </when>
          <otherwise>
            <call-macro n="conj_verb_haver_pres1">
               <with-param pos="2"/> 
            </call-macro> 
          </otherwise>
        </choose>
        <out>
          <chunk>
            <clip pos="2" part="lem"/>
            <clip pos="2" part="tags"/>
            <clip pos="2" part="chcontent"/>
          </chunk>
	  <b/>
          <chunk>
            <lit v="vbhaver"/>
            <lit-tag v="SV.vbhaver"/>
            <lit v="{^have"/>
              <var n="verbfinal"/>
	    <lit v="$}"/>
	  </chunk>
	  <b/>
	  <chunk>
	    <clip pos="4" part="lem"/>
	    <lit-tag v="SV.vblex.pp"/>
            <clip pos="4" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>


    <!-- 
        For Welsh pattern "bod[tiempo] + noun phrase + am + verb_inf"
        output English "noun phrase + be[tiempo] going to + verb_inf"
    -->
    <rule comment="REGLA: SV_ser SN SP_am SV_inf">
      <pattern>
        <pattern-item n="SV_ser"/>
        <pattern-item n="SN"/>
        <pattern-item n="SP_am"/>
        <pattern-item n="SV_inf"/>
      </pattern>
      <action>
	<choose> 
	  <when>
	    <test>
	      <or>
	        <equal>
                  <clip pos="1" part="temps"/>
                  <lit-tag v="past"/>
                </equal>
	        <equal>
                  <clip pos="1" part="temps"/>
                  <lit-tag v="pii"/>
                </equal>
	      </or>
            </test>
            <call-macro n="conj_verb_ser_past1">
               <with-param pos="2"/> 
            </call-macro> 
          </when>
          <otherwise>
            <call-macro n="conj_verb_ser_pres1">
               <with-param pos="2"/> 
            </call-macro> 
          </otherwise>
        </choose>
        <out>
          <chunk>
            <clip pos="2" part="lem"/>
            <clip pos="2" part="tags"/>
            <clip pos="2" part="chcontent"/>
          </chunk>
	  <b/>
          <chunk>
            <lit v="vbser"/>
            <lit-tag v="SV.vbser"/>
            <lit v="{^be"/>
              <var n="verbfinal"/>
	    <lit v="$}"/>
	  </chunk>
	  <b/>
          <chunk>
            <lit v="vblex"/>
            <lit-tag v="SV.vblex"/>
            <lit v="{^go"/>
            <lit-tag v="vblex.ger"/>
	    <lit v="$}"/>
	  </chunk>
	  <b/>
	  <chunk>
            <lit v="pr"/>
	    <lit-tag v="SP"/>
	    <lit v="{^"/>
	    <lit v="to"/>
	    <lit-tag v="pr"/>
	    <lit v="$}"/>
          </chunk>
	  <b/> 
	  <chunk>
	    <clip pos="4" part="whole"/>
          </chunk>
        </out>
      </action>
    </rule>




    <!-- 
        For Welsh pattern "bod(inf) + noun phrase + wedi + verb_inf"
        output English "that + noun phrase + has/have + verb_past_participle"
    -->
    <rule comment="REGLA: SV_ser_inf SN SP_wedi SV_inf">
      <pattern>
        <pattern-item n="SV_ser_inf"/>
        <pattern-item n="SN"/>
        <pattern-item n="SP_wedi"/>
        <pattern-item n="SV_inf"/>
      </pattern>
      <action>
        <call-macro n="conj_verb_haver_pres1">
          <with-param pos="2"/> 
        </call-macro> 
        <out>
	  <chunk>
	    <lit v="cnjsub"/>
	    <lit v="{^"/>
              <lit v="that"/>
	      <lit-tag v="cnjsub"/>
	    <lit v="$}"/>
	  </chunk>
	  <b/>
          <chunk>
            <clip pos="2" part="lem"/>
            <clip pos="2" part="tags"/>
            <clip pos="2" part="chcontent"/>
          </chunk>
	  <b/>
          <chunk>
            <lit v="vbhaver"/>
            <lit-tag v="SV.vbhaver"/>
            <lit v="{^have"/>
              <var n="verbfinal"/>
	    <lit v="$}"/>
	  </chunk>
	  <b/>
	  <chunk>
	    <clip pos="4" part="lem"/>
	    <lit-tag v="SV.vblex.pp"/>
            <clip pos="4" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>

     <!-- 
        For Welsh pattern "bod + noun phrase + wedi + verb_inf + verb_inf"
        output English "that + noun phrase + has/have + verb_past_participle + to + vb.inf"
    -->
    <rule comment="REGLA: SV_ser_inf SN SP_wedi SV_inf">
      <pattern>
        <pattern-item n="SV_ser_inf"/>
        <pattern-item n="SN"/>
        <pattern-item n="SP_wedi"/>
        <pattern-item n="SV_inf"/>
        <pattern-item n="SV_inf"/>
      </pattern>
      <action>
        <call-macro n="conj_verb_haver_pres1">
          <with-param pos="2"/> 
        </call-macro> 
        <out>
          <chunk>
            <lit v="cnjsub"/>
            <lit v="{^"/>
              <lit v="that"/>
              <lit-tag v="cnjsub"/>
            <lit v="$}"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="2" part="lem"/>
            <clip pos="2" part="tags"/>
            <clip pos="2" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
            <lit v="vbhaver"/>
            <lit-tag v="SV.vbhaver"/>
            <lit v="{^have"/>
              <var n="verbfinal"/>
            <lit v="$}"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="4" part="lem"/>
            <lit-tag v="SV.vblex.pp"/>
            <clip pos="4" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
            <lit v="pr"/>
            <lit v="{^"/>
              <lit v="to"/>
              <lit-tag v="pr"/>
            <lit v="$}"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="5" part="lem"/>
            <lit-tag v="SV.vblex.inf"/>
            <clip pos="5" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>

    <!-- 
        For Welsh pattern "bod + noun phrase + am + verb_inf"
        output English "that + noun phrase + will + verb_inf"
    -->
    <rule comment="REGLA: SV_ser_inf SN SP_am SV_inf">
      <pattern>
        <pattern-item n="SV_ser_inf"/>
        <pattern-item n="SN"/>
        <pattern-item n="SP_am"/>
        <pattern-item n="SV_inf"/>
      </pattern>
      <action>
        <out>
	  <chunk>
	    <lit v="cnjsub"/>
	    <lit v="{^"/>
              <lit v="that"/>
	      <lit-tag v="cnjsub"/>
	    <lit v="$}"/>
	  </chunk>
	  <b/>
          <chunk>
            <clip pos="2" part="lem"/>
            <clip pos="2" part="tags"/>
            <clip pos="2" part="chcontent"/>
          </chunk>
	  <b/>
          <chunk>
	    <lit v="vaux"/>
	    <lit-tag v="SV.vaux.inf"/>
	    <lit v="{^"/>
              <lit v="will"/>
              <lit-tag v="vaux.inf"/>
	    <lit v="$}"/>
	  </chunk>
	  <b/>
	  <chunk>
	    <clip pos="4" part="lem"/>
	    <lit-tag v="SV.vblex.inf"/>
            <clip pos="4" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>

    <!-- 
        For Welsh pattern "bod + noun phrase + ar + verb_inf"
        output English "that + noun phrase + was about to + verb_inf"
    -->
    <rule comment="REGLA: SV_ser_inf SN SP_ar SV_inf">
      <pattern>
        <pattern-item n="SV_ser_inf"/>
        <pattern-item n="SN"/>
        <pattern-item n="SP_ar"/>
        <pattern-item n="SV_inf"/>
      </pattern>
      <action>
        <call-macro n="conj_verb_ser_past1">
          <with-param pos="2"/> 
        </call-macro> 
        <out>
	  <chunk>
	    <lit v="cnjsub"/>
	    <lit v="{^"/>
              <lit v="that"/>
	      <lit-tag v="cnjsub"/>
	    <lit v="$}"/>
	  </chunk>
	  <b/>
          <chunk>
            <clip pos="2" part="lem"/>
            <clip pos="2" part="tags"/>
            <clip pos="2" part="chcontent"/>
          </chunk>
	  <b/>
          <chunk>
	    <lit v="vbser"/>
	    <lit-tag v="SV.vbser"/>
	    <lit v="{^"/>
              <lit v="be"/>
	      <var n="verbfinal"/>
	    <lit v="$}"/>
	  </chunk>
	  <b/>
	  <chunk>
            <lit v="about to"/>
	    <lit-tag v="SP"/>
	    <lit v="{^about to"/>
	    <lit-tag v="pr"/>
	    <lit v="$}"/>
	  </chunk>
	  <b/>
	  <chunk>
	    <clip pos="4" part="lem"/>
	    <lit-tag v="SV.vblex.inf"/>
            <clip pos="4" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>

     <!-- 
         For Welsh pattern "[pr.poss] + VBSER.inf_mutated + [pr.subj] + wedi + verb"
         output English "that + pr.subj + has + verb.pp"
      -->
    <rule comment="REGLA: SD_pos SV_ser_inf PRNSUBJ SP_wedi SV_inf">
      <pattern>
        <pattern-item n="SD_pos"/>
        <pattern-item n="SV_ser_inf"/>
        <pattern-item n="PRNSUBJ"/>
        <pattern-item n="SP_wedi"/>
        <pattern-item n="SV_inf"/>
      </pattern>
      <action>
        <call-macro n="conj_verb_haver_pres1">
          <with-param pos="2"/> 
        </call-macro> 
        <out>
          <chunk>
            <lit v="cnjsub"/>
            <lit v="{^"/>
              <lit v="that"/>
              <lit-tag v="cnjsub"/>
            <lit v="$}"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="3" part="lem"/>
            <clip pos="3" part="tags"/>
            <clip pos="3" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
            <lit v="vbhaver"/>
            <lit-tag v="SV.vbhaver"/>
            <lit v="{^have"/>
              <var n="verbfinal"/>
            <lit v="$}"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="5" part="lem"/>
            <lit-tag v="SV.vblex.pp"/>
            <clip pos="5" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>

    <!-- 
         For Welsh pattern "[pr.poss] + VBSER.inf_mutated + [pr.subj] + am + SM_verb"
         output English "that + pr.subj + will + verb"
      -->
    <rule comment="REGLA: SD_pos SV_ser_inf PRNSUBJ SP_am SV_inf">
      <pattern>
        <pattern-item n="SD_pos"/>
        <pattern-item n="SV_ser_inf"/>
        <pattern-item n="PRNSUBJ"/>
        <pattern-item n="SP_am"/>
        <pattern-item n="SV_inf"/>
      </pattern>
      <action>
        <out>
          <chunk>
            <lit v="cnjsub"/>
            <lit v="{^"/>
              <lit v="that"/>
              <lit-tag v="cnjsub"/>
            <lit v="$}"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="3" part="lem"/>
            <clip pos="3" part="tags"/>
            <clip pos="3" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
            <lit v="vaux"/>
            <lit-tag v="SV.vaux.inf"/>
            <lit v="{^"/>
              <lit v="will"/>
              <lit-tag v="vaux.inf"/>
            <lit v="$}"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="5" part="lem"/>
            <lit-tag v="SV.vblex.inf"/>
            <clip pos="5" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>

    <!-- 
        For Welsh pattern "[pr.poss] + VBSER.inf_mutated + [pr.subj] + ar + SM_verb"
        output English "that + pr.subj + is about to + verb"
      -->
    <rule comment="REGLA: SD_pos SV_ser_inf PRNSUBJ SP_am SV_inf">
      <pattern>
        <pattern-item n="SD_pos"/>
        <pattern-item n="SV_ser_inf"/>
        <pattern-item n="PRNSUBJ"/>
        <pattern-item n="SP_ar"/>
        <pattern-item n="SV_inf"/>
      </pattern>
      <action>
        <call-macro n="conj_verb_ser_pres1">
          <with-param pos="3"/> 
        </call-macro> 
        <out>
          <chunk>
            <lit v="cnjsub"/>
            <lit v="{^"/>
              <lit v="that"/>
              <lit-tag v="cnjsub"/>
            <lit v="$}"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="3" part="lem"/>
            <clip pos="3" part="tags"/>
            <clip pos="3" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
	    <lit v="vbser"/>
	    <lit-tag v="SV.vbser"/>
	    <lit v="{^"/>
              <lit v="be"/>
	      <var n="verbfinal"/>
	    <lit v="$}"/>
	  </chunk>
	  <b/>
	  <chunk>
            <lit v="about to"/>
	    <lit-tag v="SP"/>
	    <lit v="{^about to"/>
	    <lit-tag v="pr"/>
	    <lit v="$}"/>
	  </chunk>
          <b/>
          <chunk>
            <clip pos="5" part="lem"/>
            <lit-tag v="SV.vblex.inf"/>
            <clip pos="5" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>


    <!-- 
         For Welsh pattern "VBSER.inf + [det.def] + noun + [qualifiers] + yn + verb"
         output English "that + [det.def] + noun + [qualifiers] + is/are + verb + ing"
      -->
    <rule comment="REGLA: SV_ser_inf SN SV_ger">
      <pattern>
        <pattern-item n="SV_ser_inf"/>
        <pattern-item n="SN"/>
        <pattern-item n="SV_ger"/>
      </pattern>
      <action>
        <call-macro n="conj_verb_ser_pres1">
          <with-param pos="2"/> 
        </call-macro> 
        <out>
          <chunk>
            <lit v="cnjsub"/>
            <lit v="{^"/>
              <lit v="that"/>
              <lit-tag v="cnjsub"/>
            <lit v="$}"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="2" part="lem"/>
            <clip pos="2" part="tags"/>
            <clip pos="2" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
	    <lit v="vbser"/>
	    <lit-tag v="SV.vbser"/>
	    <lit v="{^"/>
              <lit v="be"/>
	      <var n="verbfinal"/>
	    <lit v="$}"/>
	  </chunk>
	  <b/>
          <chunk>
            <clip pos="3" part="lem"/>
            <clip pos="3" part="tags"/>
            <clip pos="3" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>



    <!-- 
      For Welsh pattern "[pr.poss] + VBSER.inf_mutated + [pr.subj] + verb.ger"
      output English "that + pr.subj + is + verb + -ing"
      -->
    <rule comment="REGLA: SD_pos SV_ser_inf PRNSUBJ SV_ger">
      <pattern>
        <pattern-item n="SD_pos"/>
        <pattern-item n="SV_ser_inf"/>
        <pattern-item n="PRNSUBJ"/>
        <pattern-item n="SV_ger"/>
      </pattern>
      <action>
        <call-macro n="conj_verb_ser_pres1">
          <with-param pos="3"/> 
        </call-macro> 
        <out>
          <chunk>
            <lit v="cnjsub"/>
            <lit v="{^"/>
              <lit v="that"/>
              <lit-tag v="cnjsub"/>
            <lit v="$}"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="3" part="lem"/>
            <clip pos="3" part="tags"/>
            <clip pos="3" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
	    <lit v="vbser"/>
	    <lit-tag v="SV.vbser"/>
	    <lit v="{^"/>
              <lit v="be"/>
	      <var n="verbfinal"/>
	    <lit v="$}"/>
	  </chunk>
	  <b/>
          <chunk>
            <clip pos="4" part="lem"/>
            <clip pos="4" part="tags"/>
            <clip pos="4" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>

    <!-- 
      For Welsh pattern "[pr.poss] + VBSER.inf_mutated + [pr.subj] + verb.ger"
      output English "that + pr.subj + is + verb + -ing"
      -->
    <rule comment="REGLA: SD_pos SV_ser_inf PRNSUBJ SV_cael_inf SN SP">
      <pattern>
        <pattern-item n="SD_pos"/>
        <pattern-item n="SV_ser_inf"/>
        <pattern-item n="PRNSUBJ"/>
        <pattern-item n="SV_cael_inf"/>
        <pattern-item n="SN"/>
        <pattern-item n="SP"/>
      </pattern>
      <action>
        <call-macro n="conj_verb_ser_pres1">
          <with-param pos="3"/> 
        </call-macro> 
        <out>
          <chunk>
            <lit v="cnjsub"/>
            <lit v="{^"/>
              <lit v="that"/>
              <lit-tag v="cnjsub"/>
            <lit v="$}"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="3" part="lem"/>
            <clip pos="3" part="tags"/>
            <clip pos="3" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
	    <lit v="vbser"/>
	    <lit-tag v="SV.vbser"/>
	    <lit v="{^"/>
              <lit v="be"/>
	      <var n="verbfinal"/>
	    <lit v="$}"/>
	  </chunk>
	  <b/>
          <chunk>
	    <lit v="vbhaver"/>
	    <lit-tag v="SV.vbhaver"/>
	    <lit v="{^"/>
              <lit v="have"/>
	      <lit v="vbhaver.ger"/>
	    <lit v="$}"/>
          </chunk>
	  <b/>
          <chunk>
            <clip pos="5" part="lem"/>
            <clip pos="5" part="tags"/>
            <clip pos="5" part="chcontent"/>
          </chunk>
	  <b/>
          <chunk>
            <clip pos="6" part="lem"/>
            <clip pos="6" part="tags"/>
            <clip pos="6" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>



    <!-- 
      For Welsh pattern "wedi + {"i" + NP, "i".conj + [pr.subj]} + SM_verb.infin"
      output English "after + {NP, pr.subj) + verb.present/verb.past
      -->
    <rule comment="REGLA: SP_wedi SP_i SN SV_inf">
      <pattern>
        <pattern-item n="SP_wedi"/>
        <pattern-item n="SP_i"/>
        <pattern-item n="SN"/>
        <pattern-item n="SV_inf"/>
      </pattern>
      <action>
        <!--
        <call-macro n="conj_verb_ser_pres1">
          <with-param pos="3"/> 
        </call-macro> 
        -->
        <out>
          <chunk>
            <lit v="cnjsub"/>
            <lit v="{^"/>
              <lit v="after"/>
              <lit-tag v="cnjsub"/>
            <lit v="$}"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="3" part="lem"/>
            <clip pos="3" part="tags"/>
            <clip pos="3" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="4" part="lem"/>
	    <clip pos="4" part="a_frase"/>
	    <clip pos="4" part="a_verb"/>
	    <var n="tense"/>
            <clip pos="4" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>

    <!-- 
      For Welsh pattern "wrth + {"i" + NP, "i".conj + [pr.subj]} + SM_verb.infin"
      output English "as + {NP, pr.subj) + verb.present/verb.past
      -->
    <rule comment="REGLA: SP_wrth SP_i SN SV_inf">
      <pattern>
        <pattern-item n="SP_wrth"/>
        <pattern-item n="SP_i"/>
        <pattern-item n="SN"/>
        <pattern-item n="SV_inf"/>
      </pattern>
      <action>
        <!--
        <call-macro n="conj_verb_ser_pres1">
          <with-param pos="3"/> 
        </call-macro> 
        -->
        <out>
          <chunk>
            <lit v="cnjsub"/>
            <lit v="{^"/>
              <lit v="as"/>
              <lit-tag v="cnjsub"/>
            <lit v="$}"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="3" part="lem"/>
            <clip pos="3" part="tags"/>
            <clip pos="3" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="4" part="lem"/>
	    <clip pos="4" part="a_frase"/>
	    <clip pos="4" part="a_verb"/>
	    <var n="tense"/>
            <clip pos="4" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>

    <!-- 
      For Welsh pattern "cyn + {"i" + NP, "i".conj + [pr.subj]} + SM_verb.infin"
      output English "before + {NP, pr.subj) + verb.present/verb.past
      -->
    <rule comment="REGLA: SP_cyn SP_i SN SV_inf">
      <pattern>
        <pattern-item n="SP_cyn"/>
        <pattern-item n="SP_i"/>
        <pattern-item n="SN"/>
        <pattern-item n="SV_inf"/>
      </pattern>
      <action>
        <!--
        <call-macro n="conj_verb_ser_pres1">
          <with-param pos="3"/> 
        </call-macro> 
        -->
        <out>
          <chunk>
            <lit v="cnjsub"/>
            <lit v="{^"/>
              <lit v="before"/>
              <lit-tag v="cnjsub"/>
            <lit v="$}"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="3" part="lem"/>
            <clip pos="3" part="tags"/>
            <clip pos="3" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="4" part="lem"/>
	    <clip pos="4" part="a_frase"/>
	    <clip pos="4" part="a_verb"/>
	    <var n="tense"/>
            <clip pos="4" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>

    <!-- 
        For Welsh pattern "erbyn + {"i" + NP, "i".conj + [pr.subj]} + SM_verb.infin"
        output English "by the time that + {NP, pr.subj) + verb.present/verb.past
      -->
    <rule comment="REGLA: SP_erbyn SP_i SN SV_inf">
      <pattern>
        <pattern-item n="SP_erbyn"/>
        <pattern-item n="SP_i"/>
        <pattern-item n="SN"/>
        <pattern-item n="SV_inf"/>
      </pattern>
      <action>
        <!--
        <call-macro n="conj_verb_ser_pres1">
          <with-param pos="3"/> 
        </call-macro> 
        -->
        <out>
          <chunk>
            <lit v="cnjsub"/>
            <lit v="{^"/>
              <lit v="by the time that"/>
              <lit-tag v="cnjsub"/>
            <lit v="$}"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="3" part="lem"/>
            <clip pos="3" part="tags"/>
            <clip pos="3" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="4" part="lem"/>
	    <clip pos="4" part="a_frase"/>
	    <clip pos="4" part="a_verb"/>
	    <var n="tense"/>
            <clip pos="4" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>


    <!-- 
        For Welsh pattern "ar ôl + {"i" + NP, "i".conj + [pr.subj]} + SM_verb.infin"
        output English "after + {NP, pr.subj) + verb.present/verb.past
      -->
    <rule comment="REGLA: SP_ar_ôl SP_i SN SV_inf">
      <pattern>
        <pattern-item n="SP_ar_ôl"/>
        <pattern-item n="SP_i"/>
        <pattern-item n="SN"/>
        <pattern-item n="SV_inf"/>
      </pattern>
      <action>
        <!--
        <call-macro n="conj_verb_ser_pres1">
          <with-param pos="3"/> 
        </call-macro> 
        -->
        <out>
          <chunk>
            <lit v="cnjsub"/>
            <lit v="{^"/>
              <lit v="after"/>
              <lit-tag v="cnjsub"/>
            <lit v="$}"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="3" part="lem"/>
            <clip pos="3" part="tags"/>
            <clip pos="3" part="chcontent"/>
          </chunk>
          <b/>
          <chunk>
            <clip pos="4" part="lem"/>
	    <clip pos="4" part="a_frase"/>
	    <clip pos="4" part="a_verb"/>
	    <var n="tense"/>
            <clip pos="4" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>




  </section-rules>
</interchunk>
